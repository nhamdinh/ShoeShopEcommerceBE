[format] 2023-09-18T09:47:48.122Z [shop-ecommerce:] info: {
  _id: new ObjectId("64f3223f6399fbd92bab92ea"),
  name: 'User',
  email: 'user@example.com',
  phone: '0890845016',
  password: '$2b$10$GGSSKE9USOcrJHq0yduZWexHY0Oks.o3NXzxH5uI8Y1X1iB0ekJNi',
  countChat: 0,
  isAdmin: false,
  buyer: [],
  __v: 0,
  createdAt: 2023-09-02T11:53:35.580Z,
  updatedAt: 2023-09-13T11:06:14.520Z
}
[format] 2023-09-18T09:47:48.172Z [shop-ecommerce:] info: res.cookie :::::function (name, value, options) {
  var opts = merge({}, options);
  var secret = this.req.secret;
  var signed = opts.signed;

  if (signed && !secret) {
    throw new Error('cookieParser("secret") required for signed cookies');
  }

  var val = typeof value === 'object'
    ? 'j:' + JSON.stringify(value)
    : String(value);

  if (signed) {
    val = 's:' + sign(val, secret);
  }

  if (opts.maxAge != null) {
    var maxAge = opts.maxAge - 0

    if (!isNaN(maxAge)) {
      opts.expires = new Date(Date.now() + maxAge)
      opts.maxAge = Math.floor(maxAge / 1000)
    }
  }

  if (opts.path == null) {
    opts.path = '/';
  }

  this.append('Set-Cookie', cookie.serialize(name, String(val), opts));

  return this;
}
[format] 2023-09-18T09:48:11.558Z [shop-ecommerce:] info: {
  _id: new ObjectId("64f3223f6399fbd92bab92ea"),
  name: 'User',
  email: 'user@example.com',
  phone: '0890845016',
  password: '$2b$10$GGSSKE9USOcrJHq0yduZWexHY0Oks.o3NXzxH5uI8Y1X1iB0ekJNi',
  countChat: 0,
  isAdmin: false,
  buyer: [],
  __v: 0,
  createdAt: 2023-09-02T11:53:35.580Z,
  updatedAt: 2023-09-18T09:47:48.127Z,
  refreshToken: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY0ZjMyMjNmNjM5OWZiZDkyYmFiOTJlYSIsImlhdCI6MTY5NTAzMDQ2OCwiZXhwIjoxNjk1Mjg5NjY4fQ.rEXlxDW6XpqyroMwshS8fvn9qp3VSg647cJeBT4_BzU'
}
[format] 2023-09-18T09:48:11.598Z [shop-ecommerce:] info: res.cookie :::::function (name, value, options) {
  var opts = merge({}, options);
  var secret = this.req.secret;
  var signed = opts.signed;

  if (signed && !secret) {
    throw new Error('cookieParser("secret") required for signed cookies');
  }

  var val = typeof value === 'object'
    ? 'j:' + JSON.stringify(value)
    : String(value);

  if (signed) {
    val = 's:' + sign(val, secret);
  }

  if (opts.maxAge != null) {
    var maxAge = opts.maxAge - 0

    if (!isNaN(maxAge)) {
      opts.expires = new Date(Date.now() + maxAge)
      opts.maxAge = Math.floor(maxAge / 1000)
    }
  }

  if (opts.path == null) {
    opts.path = '/';
  }

  this.append('Set-Cookie', cookie.serialize(name, String(val), opts));

  return this;
}
